version: '3.8'\n\nservices:\n  # MongoDB数据库\n  mongodb:\n    image: mongo:6.0\n    container_name: iwa-mongodb-prod\n    restart: unless-stopped\n    environment:\n      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}\n      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}\n      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-intelligent-work-assistant}\n    volumes:\n      - mongodb_data:/data/db\n      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/init.js:ro\n    ports:\n      - \"27017:27017\"\n    networks:\n      - app-network\n    command: mongod --auth\n    healthcheck:\n      test: [\"CMD\", \"mongosh\", \"--eval\", \"db.adminCommand('ping')\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n      start_period: 40s\n\n  # Redis缓存\n  redis:\n    image: redis:7-alpine\n    container_name: iwa-redis-prod\n    restart: unless-stopped\n    command: redis-server --requirepass ${REDIS_PASSWORD}\n    environment:\n      REDIS_PASSWORD: ${REDIS_PASSWORD}\n    volumes:\n      - redis_data:/data\n      - ./redis/redis.conf:/etc/redis/redis.conf:ro\n    ports:\n      - \"6379:6379\"\n    networks:\n      - app-network\n    healthcheck:\n      test: [\"CMD\", \"redis-cli\", \"--raw\", \"incr\", \"ping\"]\n      interval: 30s\n      timeout: 3s\n      retries: 3\n\n  # 后端应用\n  backend:\n    build:\n      context: .\n      dockerfile: server/Dockerfile.production\n      target: production\n    container_name: iwa-backend-prod\n    restart: unless-stopped\n    environment:\n      NODE_ENV: production\n      PORT: 5000\n      MONGO_URI: mongodb://${MONGO_USERNAME:-iwa}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DB_NAME:-intelligent-work-assistant}?authSource=${MONGO_DB_NAME:-intelligent-work-assistant}\n      REDIS_HOST: redis\n      REDIS_PORT: 6379\n      REDIS_PASSWORD: ${REDIS_PASSWORD}\n      JWT_SECRET: ${JWT_SECRET}\n      SESSION_SECRET: ${SESSION_SECRET}\n      BASE_URL: ${BASE_URL:-https://yourdomain.com}\n      WECHAT_APPID: ${WECHAT_APPID}\n      WECHAT_APPSECRET: ${WECHAT_APPSECRET}\n      WECHAT_TOKEN: ${WECHAT_TOKEN}\n      WECHAT_ENCODING_AES_KEY: ${WECHAT_ENCODING_AES_KEY}\n      WECHAT_CONFIG_KEY: ${WECHAT_CONFIG_KEY}\n      OPENAI_API_KEY: ${OPENAI_API_KEY}\n      QWEN_API_KEY: ${QWEN_API_KEY}\n      CLAUDE_API_KEY: ${CLAUDE_API_KEY}\n      PPIO_API_KEY: ${PPIO_API_KEY}\n      ENABLE_COMPRESSION: \"true\"\n      ENABLE_CACHE: \"true\"\n      ENABLE_METRICS: \"true\"\n      LOG_LEVEL: info\n    volumes:\n      - app_uploads:/app/uploads\n      - app_logs:/app/logs\n      - app_data:/app/server/data\n      - ./server/.env.production:/app/server/.env.production:ro\n    ports:\n      - \"5000:5000\"\n    networks:\n      - app-network\n    depends_on:\n      mongodb:\n        condition: service_healthy\n      redis:\n        condition: service_healthy\n    healthcheck:\n      test: [\"CMD\", \"node\", \"healthcheck.js\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n      start_period: 60s\n    deploy:\n      resources:\n        limits:\n          cpus: '2.0'\n          memory: 1G\n        reservations:\n          cpus: '0.5'\n          memory: 512M\n\n  # 前端应用\n  frontend:\n    build:\n      context: .\n      dockerfile: client/Dockerfile.production\n      target: production\n      args:\n        REACT_APP_API_BASE_URL: ${BASE_URL:-https://yourdomain.com}/api\n        REACT_APP_WECHAT_REDIRECT_URL: ${BASE_URL:-https://yourdomain.com}/wechat/callback\n    container_name: iwa-frontend-prod\n    restart: unless-stopped\n    environment:\n      NODE_ENV: production\n    volumes:\n      - frontend_assets:/usr/share/nginx/html\n    ports:\n      - \"3000:80\"\n    networks:\n      - app-network\n    depends_on:\n      - backend\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:80\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n    deploy:\n      resources:\n        limits:\n          cpus: '0.5'\n          memory: 256M\n        reservations:\n          cpus: '0.1'\n          memory: 64M\n\n  # Nginx反向代理\n  nginx:\n    image: nginx:1.24-alpine\n    container_name: iwa-nginx-prod\n    restart: unless-stopped\n    volumes:\n      - ./nginx/nginx.production.conf:/etc/nginx/nginx.conf:ro\n      - ./nginx/ssl:/etc/nginx/ssl:ro\n      - frontend_assets:/usr/share/nginx/html:ro\n      - nginx_logs:/var/log/nginx\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    networks:\n      - app-network\n    depends_on:\n      - backend\n      - frontend\n    healthcheck:\n      test: [\"CMD\", \"nginx\", \"-t\"]\n      interval: 30s\n      timeout: 3s\n      retries: 3\n    deploy:\n      resources:\n        limits:\n          cpus: '0.5'\n          memory: 256M\n        reservations:\n          cpus: '0.1'\n          memory: 64M\n\n  # 监控和指标收集\n  prometheus:\n    image: prom/prometheus:v2.40.0\n    container_name: iwa-prometheus-prod\n    restart: unless-stopped\n    volumes:\n      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro\n      - prometheus_data:/prometheus\n    ports:\n      - \"9090:9090\"\n    networks:\n      - app-network\n    command:\n      - '--config.file=/etc/prometheus/prometheus.yml'\n      - '--storage.tsdb.path=/prometheus'\n      - '--web.console.libraries=/etc/prometheus/console_libraries'\n      - '--web.console.templates=/etc/prometheus/consoles'\n      - '--storage.tsdb.retention.time=15d'\n      - '--web.enable-lifecycle'\n    deploy:\n      resources:\n        limits:\n          cpus: '0.5'\n          memory: 512M\n        reservations:\n          cpus: '0.1'\n          memory: 128M\n\n  # Grafana仪表板\n  grafana:\n    image: grafana/grafana:9.3.0\n    container_name: iwa-grafana-prod\n    restart: unless-stopped\n    environment:\n      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}\n      GF_SERVER_ROOT_URL: ${BASE_URL:-https://yourdomain.com}/grafana\n      GF_SERVER_SERVE_FROM_SUB_PATH: \"true\"\n    volumes:\n      - grafana_data:/var/lib/grafana\n      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro\n      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro\n    ports:\n      - \"3001:3000\"\n    networks:\n      - app-network\n    depends_on:\n      - prometheus\n    deploy:\n      resources:\n        limits:\n          cpus: '0.5'\n          memory: 256M\n        reservations:\n          cpus: '0.1'\n          memory: 128M\n\n  # 日志聚合\n  loki:\n    image: grafana/loki:2.7.0\n    container_name: iwa-loki-prod\n    restart: unless-stopped\n    volumes:\n      - ./monitoring/loki/loki-config.yml:/etc/loki/local-config.yaml:ro\n      - loki_data:/loki\n    ports:\n      - \"3100:3100\"\n    networks:\n      - app-network\n    command: -config.file=/etc/loki/local-config.yaml\n    deploy:\n      resources:\n        limits:\n          cpus: '0.5'\n          memory: 256M\n        reservations:\n          cpus: '0.1'\n          memory: 128M\n\n  # 日志收集器\n  promtail:\n    image: grafana/promtail:2.7.0\n    container_name: iwa-promtail-prod\n    restart: unless-stopped\n    volumes:\n      - ./monitoring/promtail/promtail-config.yml:/etc/promtail/config.yml:ro\n      - app_logs:/var/log/app:ro\n      - nginx_logs:/var/log/nginx:ro\n      - /var/lib/docker/containers:/var/lib/docker/containers:ro\n    networks:\n      - app-network\n    depends_on:\n      - loki\n    command: -config.file=/etc/promtail/config.yml\n    deploy:\n      resources:\n        limits:\n          cpus: '0.2'\n          memory: 128M\n        reservations:\n          cpus: '0.05'\n          memory: 32M\n\nvolumes:\n  mongodb_data:\n    driver: local\n    driver_opts:\n      type: none\n      device: /opt/iwa/data/mongodb\n      o: bind\n  \n  redis_data:\n    driver: local\n    driver_opts:\n      type: none\n      device: /opt/iwa/data/redis\n      o: bind\n  \n  app_uploads:\n    driver: local\n    driver_opts:\n      type: none\n      device: /opt/iwa/data/uploads\n      o: bind\n  \n  app_logs:\n    driver: local\n    driver_opts:\n      type: none\n      device: /opt/iwa/logs\n      o: bind\n  \n  app_data:\n    driver: local\n    driver_opts:\n      type: none\n      device: /opt/iwa/data/app\n      o: bind\n  \n  frontend_assets:\n    driver: local\n  \n  nginx_logs:\n    driver: local\n    driver_opts:\n      type: none\n      device: /opt/iwa/logs/nginx\n      o: bind\n  \n  prometheus_data:\n    driver: local\n    driver_opts:\n      type: none\n      device: /opt/iwa/data/prometheus\n      o: bind\n  \n  grafana_data:\n    driver: local\n    driver_opts:\n      type: none\n      device: /opt/iwa/data/grafana\n      o: bind\n  \n  loki_data:\n    driver: local\n    driver_opts:\n      type: none\n      device: /opt/iwa/data/loki\n      o: bind\n\nnetworks:\n  app-network:\n    driver: bridge\n    ipam:\n      config:\n        - subnet: 172.20.0.0/16