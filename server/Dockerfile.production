# 多阶段构建的Node.js生产环境Dockerfile\nFROM node:18-alpine AS base\n\n# 设置工作目录\nWORKDIR /app\n\n# 安装系统依赖\nRUN apk add --no-cache \\\n    python3 \\\n    make \\\n    g++ \\\n    curl \\\n    && addgroup -g 1001 -S nodejs \\\n    && adduser -S app -u 1001\n\n# 复制package文件\nCOPY server/package*.json ./\n\n# ====================================\n# 依赖安装阶段\n# ====================================\nFROM base AS dependencies\n\n# 安装所有依赖（包括开发依赖）\nRUN npm ci --include=dev\n\n# ====================================\n# 构建阶段\n# ====================================\nFROM dependencies AS build\n\n# 复制源代码\nCOPY server/ .\n\n# 运行构建脚本（如果有）\n# RUN npm run build\n\n# 清理不必要的文件\nRUN rm -rf node_modules/.cache \\\n    && npm prune --omit=dev \\\n    && npm cache clean --force\n\n# ====================================\n# 生产运行阶段\n# ====================================\nFROM base AS production\n\n# 设置Node.js生产环境\nENV NODE_ENV=production\nENV NODE_OPTIONS=\"--max-old-space-size=1024\"\n\n# 创建应用目录结构\nRUN mkdir -p /app/uploads \\\n    && mkdir -p /app/logs \\\n    && mkdir -p /app/data \\\n    && chown -R app:nodejs /app\n\n# 只安装生产依赖\nRUN npm ci --omit=dev --cache /tmp/empty-cache \\\n    && rm -rf /tmp/empty-cache\n\n# 复制构建后的应用代码\nCOPY --from=build --chown=app:nodejs /app .\n\n# 复制配置文件\nCOPY --chown=app:nodejs server/.env.production.example ./.env.production\n\n# 创建健康检查脚本\nRUN echo '#!/usr/bin/env node' > healthcheck.js && \\\n    echo 'const http = require(\"http\");' >> healthcheck.js && \\\n    echo 'const options = { host: \"localhost\", port: process.env.PORT || 5000, path: \"/health\", timeout: 2000 };' >> healthcheck.js && \\\n    echo 'const request = http.request(options, (res) => { process.exit(res.statusCode === 200 ? 0 : 1); });' >> healthcheck.js && \\\n    echo 'request.on(\"error\", () => { process.exit(1); });' >> healthcheck.js && \\\n    echo 'request.end();' >> healthcheck.js && \\\n    chmod +x healthcheck.js\n\n# 安全加固\nRUN chown -R app:nodejs /app \\\n    && chmod -R 755 /app \\\n    && chmod -R 700 /app/.env* || true \\\n    && chmod -R 755 /app/scripts/*.sh || true\n\n# 切换到非root用户\nUSER app\n\n# 暴露端口\nEXPOSE 5000\n\n# 健康检查\nHEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n    CMD node healthcheck.js\n\n# 启动应用\nCMD [\"node\", \"index.js\"]