# 智能工作助手应用 - 生产环境Docker Compose配置
# ================================================

version: '3.8'

services:
  # 主应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: smart-work-assistant-app
    restart: always
    ports:
      - "${APP_PORT:-3000}:5000"
    environment:
      # 基础配置
      - NODE_ENV=production
      - PORT=5000
      
      # 数据库配置
      - MONGODB_URI=${MONGODB_URI:-mongodb://mongo:27017/intelligent-work-assistant}
      
      # JWT配置
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - JWT_EXPIRE=${JWT_EXPIRE:-7d}
      
      # 微信公众号配置
      - WECHAT_APP_ID=${WECHAT_APP_ID}
      - WECHAT_APP_SECRET=${WECHAT_APP_SECRET}
      - WECHAT_TOKEN=${WECHAT_TOKEN}
      - WECHAT_ENCODING_AES_KEY=${WECHAT_ENCODING_AES_KEY}
      
      # AI服务配置
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - QWEN_API_KEY=${QWEN_API_KEY}
      - PPIO_API_KEY=${PPIO_API_KEY}
      
      # Google Calendar集成
      - GOOGLE_CALENDAR_CLIENT_ID=${GOOGLE_CALENDAR_CLIENT_ID}
      - GOOGLE_CALENDAR_CLIENT_SECRET=${GOOGLE_CALENDAR_CLIENT_SECRET}
      
      # Microsoft Graph集成
      - MICROSOFT_GRAPH_CLIENT_ID=${MICROSOFT_GRAPH_CLIENT_ID}
      - MICROSOFT_GRAPH_CLIENT_SECRET=${MICROSOFT_GRAPH_CLIENT_SECRET}
      
      # 邮件服务配置
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - FROM_EMAIL=${FROM_EMAIL}
      - FROM_NAME=${FROM_NAME:-智能工作助手}
      
    volumes:
      - app_uploads:/app/server/uploads
      - app_logs:/app/server/logs
    depends_on:
      - mongo
      - redis
    networks:
      - smart-work-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MongoDB数据库
  mongo:
    image: mongo:6.0-rc
    container_name: smart-work-assistant-mongo
    restart: always
    ports:
      - "${MONGO_PORT:-27017}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-admin123}
      - MONGO_INITDB_DATABASE=intelligent-work-assistant
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - smart-work-network
    command: mongod --auth

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: smart-work-assistant-redis
    restart: always
    ports:
      - "${REDIS_PORT:-6379}:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    networks:
      - smart-work-network
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: smart-work-assistant-nginx
    restart: always
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - smart-work-network

  # 监控服务 (可选)
  prometheus:
    image: prom/prometheus:latest
    container_name: smart-work-assistant-prometheus
    restart: always
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - smart-work-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

# 网络配置
networks:
  smart-work-network:
    driver: bridge
    name: smart-work-network

# 数据卷配置
volumes:
  mongo_data:
    driver: local
    name: smart-work-mongo-data
  mongo_config:
    driver: local
    name: smart-work-mongo-config
  redis_data:
    driver: local
    name: smart-work-redis-data
  app_uploads:
    driver: local
    name: smart-work-app-uploads
  app_logs:
    driver: local
    name: smart-work-app-logs
  nginx_logs:
    driver: local
    name: smart-work-nginx-logs
  prometheus_data:
    driver: local
    name: smart-work-prometheus-data